<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">

	<!-- dbcp配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> 
	    <property name="driverClassName"><value>${jdbc.driverClass}</value></property>
	    <property name="url"><value>${jdbc.url}</value></property>
	    <property name="username"><value>${jdbc.userName}</value></property>
	    <property name="password"><value>${jdbc.password}</value></property>
	    <property name="maxActive"><value>20</value></property>
	    <property name="maxIdle"><value>10</value></property>
	    <property name="maxWait"><value>10000</value></property>
	    
	    <!-- 如果是MySQL库，可能存在8小时问题，可以考虑开启过期定时器(numTestsPerEvictionRun=1)，定期过期一下连接，timeBetweenEvictionRunsMillis时间可以设置在8小时左右 -->
	    <!-- 过期时循环测试多少次（0 就相当于关闭定时器） -->
		<property name="numTestsPerEvictionRun" value="1" />
		<!-- expire connection 定时器周期 -->
		<property name="timeBetweenEvictionRunsMillis" value="120000" />
		<!-- 当连接空闲时是否测试，即保持连接一直存活，配合expire connection 定时器使用 -->
		<property name="testWhileIdle" value="true"></property>
	</bean>
		
	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<!-- web项目启动时是否更新表结构,如果数据库表不存在hibernate根据对象创建表结构 -->
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<!-- 本地语言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 是否打印Hibernate的SQL语句-->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- 是否显示格式化Hibernate的SQL语句 -->
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
		<!-- 自动扫描注解方式配置的hibernate类文件,hbm.xml配置 -->
		<property name="packagesToScan">
			<list>
				<value>com.gt.model</value>
			</list>
		</property>
	</bean>

	<!-- 配置Hibernate事务管理器 -->
	<bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 以如下关键字开头的方法使用事物 -->
			<tx:method name="add*" />
			<tx:method name="save*" />
			<tx:method name="update*" />
			<tx:method name="modify*" />
			<tx:method name="edit*" />
			<tx:method name="delete*" />
			<tx:method name="remove*" />
			<tx:method name="repair" />
			<tx:method name="deleteAndRepair" /> 
			<tx:method name="*Tran" />
			<!-- 以如下关键字开头的方法不使用事物 -->
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />
			<!-- 其他方法不使用事物 
			<tx:method name="*" propagation="SUPPORTS" />-->
		</tx:attributes>
	</tx:advice>
	<!-- 切面，将事物用在哪些对象上， gt.sys.service..*Impl.*(..))表示： gt.sys.service下面以Impl结尾的所有文件，(..)表示所有方法-->
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.gt.*.service..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>
</beans>
